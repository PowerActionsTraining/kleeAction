apiVersion: automation.cloudbees.io/v1alpha1
kind: action
name: Create Upload and Register binary
inputs:
  pathtobinary:  
    description: 'Path to binary'
    required: true
  artifactversion:
    description: 'version'
    required: true
  username:
    description: 'username'
    required: true
  password:
    description: 'password'
    required: true
  repo:
    description: 'repo'
    required: true
runs:
  using: composite
  steps:
      - name: Print vars
        id: step1
        uses: docker://curlimages/curl:latest
        shell: sh
        run: |
          echo  ${{inputs.username}} - ${{inputs.password}} - ${{inputs.repo}}
      - name: Create file
        id: step3
        uses: docker://curlimages/curl:latest
        shell: sh
        run: echo "This is an example file - $(date)" > ${{inputs.pathtobinary}}
      - name: Upload to Nexus
        id: step4
        uses: docker://curlimages/curl:latest
        shell: sh
        run: |
          curl -v -u ${{inputs.username}}:${{inputs.password}} --upload-file ${{inputs.pathtobinary}} ${{inputs.repo}}
      - name: List artifacts in repo
        id: step5
        uses: docker://curlimages/curl:latest
        shell: sh
        run: |
          curl -s -u ${{inputs.username}}:${{inputs.password}} \
             "https://nexus.cloudbees.guru:8081/service/rest/v1/search?repository=unify-docker-training" \
      - name: Get artifact digest
        id: step6
        uses: docker://ganeshpl/alpine-jq
        shell: sh
        run: |
          echo -n "$(echo "${{inputs.password}}" | curl -s -u "${{inputs.username}}" 'https://nexus.cloudbees.guru:8081/service/rest/v1/assets?repository=unify-docker-training' | jq -r '.items[] | select(.path == "${{inputs.pathtobinary}}") | .checksum.md5')" > $CLOUDBEES_OUTPUTS/digest
      - name: Register built artifact
        id: step7
        uses: cloudbees-io/register-build-artifact@v1
        with:
          version: ${{inputs.artifactversion}}
          url: ${{vars.nexus_training_actions_repo}}${{inputs.pathtobinary}}
          digest: ${{steps.step6.outputs.digest}}
          name: ${{inputs.pathtobinary}}
